{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JeanAlcides\\\\Documents\\\\_Projetos\\\\semana-js3\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './index.css';\nimport wordList from './resources/words.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MAX_TYPED_KEYS = 30;\n\nconst getWord = () => {\n  const index = Math.floor(Math.random() * wordList.length);\n  const word = wordList[index];\n  return word.toLowerCase();\n};\n\nconst Word = ({\n  word,\n  validKeys\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"matched\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"remainder\",\n      children: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Word;\n\nconst App = () => {\n  _s();\n\n  const [typedKeys, setTypedKeys] = useState([]);\n  const [validKeys, setValisKeys] = useState([]);\n  const [word, setWord] = useState('');\n  console.log('word', getWord());\n  useEffect(() => {\n    setWord(getWord());\n  }, []);\n\n  const handleKeyDown = e => {\n    e.preventDefault();\n    const {\n      key\n    } = e;\n    setTypedKeys(prev => [...prev, key].slice(MAX_TYPED_KEYS * -1));\n    console.log('key', key);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    tabIndex: \"0\",\n    onKeyDown: handleKeyDown,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"valid-keys\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"matched\",\n        children: \"aba\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Word, {\n        word: word,\n        validKeys: valideKeys\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typed-keys\",\n      children: typedKeys ? typedKeys.join(' ') : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completed-words\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"cidade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"carro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"profisional\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"t7xqtPoUfFBSYNqz8jBAo3NJz+A=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Word\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/JeanAlcides/Documents/_Projetos/semana-js3/src/App.js"],"names":["React","useEffect","useState","wordList","MAX_TYPED_KEYS","getWord","index","Math","floor","random","length","word","toLowerCase","Word","validKeys","App","typedKeys","setTypedKeys","setValisKeys","setWord","console","log","handleKeyDown","e","preventDefault","key","prev","slice","valideKeys","join"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,MAAMC,cAAc,GAAG,EAAvB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,QAAQ,CAACO,MAApC,CAAd;AACA,QAAMC,IAAI,GAAGR,QAAQ,CAACG,KAAD,CAArB;AACA,SAAOK,IAAI,CAACC,WAAL,EAAP;AACH,CAJD;;AAMA,MAAMC,IAAI,GAAG,CAAC;AAACF,EAAAA,IAAD;AAAOG,EAAAA;AAAP,CAAD,KAAuB;AAChC,sBACI;AAAA,4BACI;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6BH;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CAPD;;KAAME,I;;AASN,MAAME,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACY,SAAD,EAAYI,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,IAAD,EAAOQ,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AAEAkB,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBhB,OAAO,EAA3B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,OAAO,CAACd,OAAO,EAAR,CAAP;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMiB,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAUF,CAAhB;AAEAN,IAAAA,YAAY,CAAES,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUD,GAAV,EAAeE,KAAf,CAAqBvB,cAAc,GAAG,CAAC,CAAvC,CAAX,CAAZ;AAIAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBI,GAAnB;AAEH,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,QAAQ,EAAC,GAApC;AAAwC,IAAA,SAAS,EAAEH,aAAnD;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEX,IAAZ;AAAkB,QAAA,SAAS,EAAEiB;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAA6BZ,SAAS,GAAGA,SAAS,CAACa,IAAV,CAAe,GAAf,CAAH,GAAyB;AAA/D;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAxCD;;GAAMd,G;;MAAAA,G;AA0CN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport './index.css';\nimport wordList from './resources/words.json';\n\nconst MAX_TYPED_KEYS = 30;\n\nconst getWord = () => {\n    const index = Math.floor(Math.random() * wordList.length);\n    const word = wordList[index];\n    return word.toLowerCase();\n};\n\nconst Word = ({word, validKeys}) => {\n    return(\n        <>\n            <span className=\"matched\"></span>\n            <span className=\"remainder\">{word}</span>\n        </>\n    )\n}\n\nconst App = () => {\n\n    const [typedKeys, setTypedKeys] = useState([]);\n    const [validKeys, setValisKeys] = useState([]);\n    const [word, setWord] = useState('');\n\n    console.log('word', getWord());\n\n    useEffect(() => {\n        setWord(getWord());\n    }, [])\n\n    const handleKeyDown = (e) => {\n        e.preventDefault();\n        const { key } = e;\n\n        setTypedKeys((prev) => [...prev, key].slice(MAX_TYPED_KEYS * -1));\n\n\n\n        console.log('key', key);\n\n    }\n\n    return (\n        <div className=\"container\" tabIndex=\"0\" onKeyDown={handleKeyDown}>\n            <div className=\"valid-keys\">\n                <span className=\"matched\">aba</span>\n                <Word word={word} validKeys={valideKeys} />\n            </div>\n            <div className=\"typed-keys\">{typedKeys ? typedKeys.join(' ') : null}</div>\n            <div className=\"completed-words\">\n                <ol>\n                    <li>cidade</li>\n                    <li>carro</li>\n                    <li>profisional</li>\n                </ol>\n            </div>\n        </div>\n    )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}